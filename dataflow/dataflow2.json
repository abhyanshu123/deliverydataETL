{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Data",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "final",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {Trader No.} as string,",
				"          {Invoice_No.} as string,",
				"          {Corporation_No.} as string,",
				"          {Company_No.} as string,",
				"          INVC_TYPE as string,",
				"          Inv_Confirm as string,",
				"          INVC_DATE as string,",
				"          INVC_DLVRY_DATE as timestamp,",
				"          {Order No.} as string,",
				"          INVC_CRTE_DTIME as string,",
				"          INVC_CRTE_EMP_NO as string,",
				"          {Lead No.} as string,",
				"          Price as string,",
				"          {Invoice_Cofirmation_No.} as string,",
				"          InvDate as timestamp,",
				"          Delivery_Date as timestamp,",
				"          TEAM_LEADER_JOINING_DATE as timestamp,",
				"          KEC_NAME as string,",
				"          Team_Leader_Name as string,",
				"          Team_Leader_Code as string,",
				"          {\"Active/Inactive\"} as string,",
				"          link_date as string,",
				"          EQRY_SRC_CODE as string,",
				"          Lead_STAT as string,",
				"          Lead_TYPE as string,",
				"          EQRY_CRTE_DTIME as string,",
				"          EQRY_SUB_SRC_CODE as string,",
				"          Lead_Category_Type as string,",
				"          Lead_Sub_Source_Name as string,",
				"          Lead_Source as string,",
				"          Lead_Status as string,",
				"          Lead_QTY as integer,",
				"          Booking_Date as string,",
				"          Model_Code as string,",
				"          TRIM_Code as string,",
				"          ORDER_BILL_TO_STATE as string,",
				"          ORDER_BILL_TO_CITY as string,",
				"          INVC_CITY_CODE as string,",
				"          INVC_RGN_CODE as string,",
				"          INVC_STCD_CODE as string,",
				"          Flag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Trader No.} as string,",
				"          {Invoice_No.} as string,",
				"          {Corporation_No.} as string,",
				"          {Company_No.} as string,",
				"          INVC_TYPE as string,",
				"          Inv_Confirm as string,",
				"          INVC_DATE as string,",
				"          INVC_DLVRY_DATE as string,",
				"          {Order No.} as string,",
				"          INVC_CRTE_DTIME as string,",
				"          INVC_CRTE_EMP_NO as string,",
				"          {Lead No.} as string,",
				"          Price as string,",
				"          {Invoice_Cofirmation_No.} as string,",
				"          InvDate as string,",
				"          Delivery_Date as string,",
				"          TEAM_LEADER_JOINING_DATE as string,",
				"          KEC_NAME as string,",
				"          Team_Leader_Name as string,",
				"          Team_Leader_Code as string,",
				"          {\"Active/Inactive\"} as string,",
				"          link_date as string,",
				"          EQRY_SRC_CODE as string,",
				"          Lead_STAT as string,",
				"          Lead_TYPE as string,",
				"          EQRY_CRTE_DTIME as string,",
				"          EQRY_SUB_SRC_CODE as string,",
				"          Lead_Category_Type as string,",
				"          Lead_Sub_Source_Name as string,",
				"          Lead_Source as string,",
				"          Lead_Status as string,",
				"          Lead_QTY as string,",
				"          Booking_Date as string,",
				"          Model_Code as string,",
				"          TRIM_Code as string,",
				"          ORDER_BILL_TO_STATE as string,",
				"          ORDER_BILL_TO_CITY as string,",
				"          INVC_CITY_CODE as string,",
				"          INVC_RGN_CODE as string,",
				"          INVC_STCD_CODE as string,",
				"          Flag as string",
				"     ),",
				"     partitionFileNames:['final.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}